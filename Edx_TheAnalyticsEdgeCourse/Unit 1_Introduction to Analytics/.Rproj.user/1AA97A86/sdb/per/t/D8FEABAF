{
    "collab_server" : "",
    "contents" : "##Assignment 2: climate change\nclimate = read.csv (\"G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/climate_change.csv\")\nclimate_train = subset(climate, climate$Year <= 2006)\nclimate_test = subset(climate, climate$Year > 2006)\n\nmodel1 = lm(Temp ~ MEI + CO2 + CH4 + N2O + CFC.11 + CFC.12 + TSI + Aerosols, data = climate_train) \nsummary(model1) \n\ncor(climate_train$N2O,climate_train)\ncor(climate_train$CFC.11,climate_train)\n\nmodel2 = lm(Temp ~ MEI + TSI + Aerosols + N2O, data = climate_train)\nsummary(model2)\n\nmodel3 = step(model1)\nsummary(model3)\n\npredictions = predict(model3, climate_test)\n\nSSE = sum((predictions - climate_test$Temp)^2)\nSST = sum((mean(climate_train$Temp) - climate_test$Temp)^2)\nR2 = 1 - SSE/SST\nR2\n\n##Assignmetn 2: Reading Test Scores\npisaTrain = read.csv (\"G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/pisa2009train.csv\")\npisaTest = read.csv (\"G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/pisa2009test.csv\")\n\nnrow(pisaTrain)\ntapply(pisaTrain$readingScore, pisaTrain$male, mean)\n\nsummary(pisaTrain)\n\npisaTrain = na.omit(pisaTrain)\npisaTest = na.omit(pisaTest)\n\npisaTrain$raceeth = relevel(pisaTrain$raceeth, \"White\")\npisaTest$raceeth = relevel(pisaTest$raceeth, \"White\")\n\nlmScore = lm(readingScore ~ ., data = pisaTrain)\nsummary(lmScore)\n\ntrainPredictions = predict(lmScore, pisaTrain)\nSSE = sum((trainPredictions - pisaTrain$readingScore)^2) #also: SSE = sum(lmScore$residuals^2)\nRMSE = sqrt(SSE/nrow(pisaTrain))\nRMSE\n\npredTest = predict(lmScore, newdata = pisaTest)\nsummary(predTest)\n\nSSE = sum((predTest - pisaTest$readingScore)^2)\nRMSE = sqrt(SSE/nrow(pisaTest))\nSSE\nRMSE\n\nmean(pisaTrain$readingScore)\nSST = sum((mean(pisaTrain$readingScore) - pisaTest$readingScore)^2)\nSST\nR2 = 1 - SSE/SST\nR2\n\n\n##Assignment 2: Detecting Flu Epidemics\nfluTrain = read.csv(\"G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/FluTrain.csv\")\nfluTrain$Week[which.max(fluTrain$ILI)]\nfluTrain$Week[which.max(fluTrain$Queries)]\n\nhist(fluTrain$ILI, breaks = 20)\nplot(fluTrain$Queries, log(fluTrain$ILI))\n\nFluTrend1 = lm(log(ILI) ~ Queries, data = fluTrain)\nsummary(FluTrend1)\ncor(log(fluTrain$ILI), fluTrain$Queries)\n\nfluTest = read.csv(\"G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/FluTest.csv\")\nPredTest1 = exp(predict(FluTrend1, newdata = fluTest))\nPredTest1[which(fluTest$Week == \"2012-03-11 - 2012-03-17\")]\n\n(fluTest$ILI[11] - PredTest1[11]) / fluTest$ILI[11] \nSSE = sum((PredTest1 - fluTest$ILI)^2)\nRMSE = sqrt(SSE/nrow(fluTest))\nRMSE\n\n\nlibrary(zoo)\nILILag2 = lag(zoo(fluTrain$ILI), -2, na.pad=TRUE)\nfluTrain$ILILag2 = coredata(ILILag2)\nplot(log(fluTrain$ILILag2), log(fluTrain$ILI))\nFluTrend2 = lm(log(ILI) ~ Queries + log(ILILag2), data = fluTrain)\nsummary(FluTrend2)\n\nILILag2 = lag(zoo(fluTest$ILI), -2, na.pad=TRUE)\nfluTest$ILILag2 = coredata(ILILag2)\nfluTest$ILILag2[1] = fluTrain$ILI[416]\nfluTest$ILILag2[2] = fluTrain$ILI[417]\n\nPredTest2 = exp(predict(FluTrend2, newdata = fluTest))\nSSE = sum((PredTest2 - fluTest$ILI)^2)\nRMSE = sqrt(SSE/nrow(fluTest))\nRMSE\n\n",
    "created" : 1502366657794.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "686163323",
    "id" : "D8FEABAF",
    "lastKnownWriteTime" : 1502888165,
    "last_content_update" : 1502888165508,
    "path" : "G:/DOCUMENTOS/Edx_Analytics Edge/Unit 2/Asignment 2.R",
    "project_path" : null,
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}